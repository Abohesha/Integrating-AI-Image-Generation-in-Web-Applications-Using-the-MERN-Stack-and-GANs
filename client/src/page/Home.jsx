import React, { useEffect, useState } from 'react';
import { Card, FormField, Loader } from '../components';

const RenderCards = ({ data, title }) => {
  return data?.length > 0 ? (
    data.map((post) => <Card key={post._id} {...post} />)
  ) : (
    <h2 className="mt-5 font-bold text-gradient text-2xl uppercase animate-pulse">
      {title}
    </h2>
  );
};

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState([]);
  const [searchText, setSearchText] = useState('');
  const [searchedResults, setSearchedResults] = useState([]);
  const [searchTimeout, setSearchTimeout] = useState(null);

  const fetchPosts = async () => {
    setLoading(true);
    try {
      const response = await fetch('http://localhost:8080/api/v1/post');
      if (response.ok) {
        const result = await response.json();
        setAllPosts(result.data.reverse());
      }
    } catch (err) {
      alert('Error fetching posts');
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchPosts();
  }, []);

  const handleSearchChange = (e) => {
    const { value } = e.target;
    setSearchText(value);
    clearTimeout(searchTimeout);

    setSearchTimeout(
      setTimeout(() => {
        const filteredResults = allPosts.filter(
          (item) =>
            item.name.toLowerCase().includes(value.toLowerCase()) ||
            item.prompt.toLowerCase().includes(value.toLowerCase())
        );
        setSearchedResults(filteredResults);
      }, 500)
    );
  };

  return (
    <section className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div className="text-center mb-16">
        <h1 className="font-extrabold text-gradient text-5xl md:text-6xl mb-4">
          AI Imagination Gallery
        </h1>
        <p className="mt-2 text-gray-600 text-lg max-w-2xl mx-auto">
          Explore breathtaking creations generated by DALL-E AI. Dive into a world where 
          artificial intelligence meets human creativity.
        </p>
      </div>

      <div className="max-w-2xl mx-auto mb-16">
        <FormField
          labelName=""
          type="text"
          name="search"
          placeholder="🔍 Search by prompt or creator..."
          value={searchText}
          handleChange={handleSearchChange}
          customStyles="rounded-full px-6 py-4 shadow-lg hover:shadow-xl transition-shadow"
        />
      </div>

      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center min-h-[400px]">
            <div className="flex flex-col items-center">
              <Loader />
              <p className="mt-4 text-gray-500 animate-pulse">
                Loading creativity...
              </p>
            </div>
          </div>
        ) : (
          <>
            {searchText && (
              <div className="bg-white/50 backdrop-blur-sm rounded-lg p-4 mb-8 text-center shadow-sm">
                <h2 className="text-xl font-semibold text-gray-700">
                  Search results for: 
                  <span className="ml-2 text-purple-600 italic">{searchText}</span>
                </h2>
              </div>
            )}
            
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
              <RenderCards
                data={searchText ? searchedResults : allPosts}
                title={searchText ? 'No matching results found' : 'Be the first to create!'}
              />
            </div>
            
            {!searchText && (
              <div className="mt-12 text-center">
                <p className="text-gray-500 italic">
                  Showing {allPosts.length} inspirational creations
                </p>
              </div>
            )}
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
